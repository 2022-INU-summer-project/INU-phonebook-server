name: Java CD with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      # 여기서 실행되는 커맨드에 대한 설명으로, Workflow에 표시됩니다.
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # 이렇게 하나의 커맨드가 아닌 여러 커맨드도 실행 가능합니다.
      - name: make application-prod.yml
        env:
          MYSQL_URL: ${{ secrets.MYSQL_URL }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          TABLE_NAME: ${{ secrets.TABLE_NAME }}
        run: |
          cd ./inu-phonebook/src/main/resources
          touch ./application-prod.yml
          echo "${{ secrets.PROPERTIES }}" > ./application-prod.yml
        shell: bash
      
      - name: init with Gradle
        uses: gradle/gradle-build-action@v2
      - run: gradle init

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.1.1
          arguments: build
          build-root-directory: inu-phonebook

      - name: Docker build & push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} --platform linux/amd64 .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

          
      - name: Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST_ADDRESS }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port : ${{ secrets.SERVER_PORT }}
          script: |
            docker stop inu-phonebook
            docker rm inu-phonebook
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
            docker run -d -p 8103:8080 -e TZ=Asia/Seoul --name inu-phonebook ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
    
